import pandas as pd
import matplotlib.pyplot as plt
import squarify
import japanize_matplotlib
import plotly.express as px
import streamlit as st

# Streamlitのタイトル
st.title('市場規模別業界ツリーマップ（カテゴリ別色分け）')

# データの定義
data = [
    {"業界名": "建設", "カテゴリ": "インフラ", "市場規模（億円）": 569257},
    {"業界名": "不動産", "カテゴリ": "インフラ", "市場規模（億円）": 462000},
    {"業界名": "生命保険", "カテゴリ": "サービス", "市場規模（億円）": 429767},
    {"業界名": "化学", "カテゴリ": "ものづくり", "市場規模（億円）": 317080},
    {"業界名": "自動車部品", "カテゴリ": "ものづくり", "市場規模（億円）": 310893},
    {"業界名": "旅行", "カテゴリ": "サービス", "市場規模（億円）": 281000},
    {"業界名": "石油（国内）", "カテゴリ": "インフラ", "市場規模（億円）": 258012},
    {"業界名": "プラント・エンジニアリング", "カテゴリ": "インフラ", "市場規模（億円）": 241160},
    {"業界名": "自動車（国内）", "カテゴリ": "ものづくり", "市場規模（億円）": 189866},
    {"業界名": "システム開発", "カテゴリ": "サービス", "市場規模（億円）": 170326},
    {"業界名": "外食（ファミレス、すし、居酒屋）", "カテゴリ": "サービス", "市場規模（億円）": 169000},
    {"業界名": "戸建て住宅", "カテゴリ": "サービス", "市場規模（億円）": 163000},
    {"業界名": "携帯電話事業者", "カテゴリ": "インフラ", "市場規模（億円）": 148300},
    {"業界名": "非鉄金属", "カテゴリ": "ものづくり", "市場規模（億円）": 146921},
    {"業界名": "eコマース", "カテゴリ": "サービス", "市場規模（億円）": 139000},
    {"業界名": "スーパー", "カテゴリ": "サービス", "市場規模（億円）": 137276},
    {"業界名": "コンビニエンスストア", "カテゴリ": "サービス", "市場規模（億円）": 116593},
    {"業界名": "医薬品", "カテゴリ": "サービス", "市場規模（億円）": 113707},
    {"業界名": "加工食品", "カテゴリ": "ものづくり", "市場規模（億円）": 112933},
    {"業界名": "介護", "カテゴリ": "サービス", "市場規模（億円）": 104000},
    {"業界名": "電子部品", "カテゴリ": "ものづくり", "市場規模（億円）": 103589},
    {"業界名": "ドラッグストア", "カテゴリ": "サービス", "市場規模（億円）": 92022},
    {"業界名": "損害保険", "カテゴリ": "サービス", "市場規模（億円）": 91316},
    {"業界名": "農業", "カテゴリ": "インフラ", "市場規模（億円）": 90015},
    {"業界名": "人材サービス", "カテゴリ": "サービス", "市場規模（億円）": 87646},
    {"業界名": "アパレル", "カテゴリ": "サービス", "市場規模（億円）": 85160},
    {"業界名": "鉄道（私鉄）", "カテゴリ": "インフラ", "市場規模（億円）": 83900},
    {"業界名": "防衛", "カテゴリ": "インフラ", "市場規模（億円）": 77249},
    {"業界名": "消費者金融", "カテゴリ": "サービス", "市場規模（億円）": 75459},
    {"業界名": "広告", "カテゴリ": "サービス", "市場規模（億円）": 73167},
    {"業界名": "半導体", "カテゴリ": "ものづくり", "市場規模（億円）": 72861},
    {"業界名": "印刷", "カテゴリ": "ものづくり", "市場規模（億円）": 69640},
    {"業界名": "産業機械", "カテゴリ": "ものづくり", "市場規模（億円）": 55821},
    {"業界名": "百貨店・ショッピングセンター", "カテゴリ": "サービス", "市場規模（億円）": 54211},
    {"業界名": "家電量販店", "カテゴリ": "サービス", "市場規模（億円）": 46324},
    {"業界名": "リース", "カテゴリ": "インフラ", "市場規模（億円）": 46299},
    {"業界名": "リフォーム・リノベーション", "カテゴリ": "サービス", "市場規模（億円）": 42710},
    {"業界名": "鉄道（JR）", "カテゴリ": "インフラ", "市場規模（億円）": 42667},
    {"業界名": "ディスカウント店・100円ショップ", "カテゴリ": "サービス", "市場規模（億円）": 40000},
    {"業界名": "専門工事", "カテゴリ": "インフラ", "市場規模（億円）": 39758},
    {"業界名": "ホームセンター", "カテゴリ": "ものづくり", "市場規模（億円）": 39750},
    {"業界名": "医療機器・用品", "カテゴリ": "サービス", "市場規模（億円）": 38336},
    {"業界名": "飲料・乳業", "カテゴリ": "ものづくり", "市場規模（億円）": 37470},
    {"業界名": "建設機械", "カテゴリ": "サービス", "市場規模（億円）": 37359},
    {"業界名": "ホテル", "カテゴリ": "ものづくり", "市場規模（億円）": 37279},
    {"業界名": "食肉", "カテゴリ": "ものづくり", "市場規模（億円）": 34678},
    {"業界名": "重電", "カテゴリ": "インフラ", "市場規模（億円）": 34131},
    {"業界名": "警備", "カテゴリ": "インフラ", "市場規模（億円）": 33059},
    {"業界名": "水処理プラント", "カテゴリ": "インフラ", "市場規模（億円）": 30205},
    {"業界名": "映画・アニメ", "カテゴリ": "サービス", "市場規模（億円）": 29277}
]
# DataFrameに変換
df = pd.DataFrame(data)

# カテゴリーごとの色を指定
color_dict = {
    "インフラ": "navy",         # インフラ：濃紺
    "サービス": "dodgerblue",   # サービス：ドジャーブルー
    "ものづくり": "lightblue"   # ものづくり：ライトブルー
}

df["color"] = df["カテゴリ"].map(color_dict)

# 単位を億円から兆円に変換する関数
def format_market_size(size_in_oku):
    if size_in_oku >= 10000:  # 1兆円以上の場合
        return f'{size_in_oku / 10000:.1f} 兆円'
    else:
        return f'{size_in_oku} 億円'

df["市場規模"] = df["市場規模（億円）"].apply(format_market_size)

# ラベルを作成（市場規模が小さいブロックはラベルを除く）
df["ラベル"] = df.apply(
    lambda row: f'{row["業界名"]}\n{row["市場規模"]}' if row["市場規模（億円）"] > 100000 else '', axis=1
)

# ツリーマップの作成 (plotlyを使用)
fig = px.treemap(
    df,
    path=['業界名'],  # 業界名を階層に設定（1つのマップに統合）
    values='市場規模（億円）',  # 面積の基準
    color='カテゴリ',  # カテゴリごとに色分け
    color_discrete_map=color_dict,  # カテゴリごとの色を指定
    hover_data={'市場規模': True},  # ホバー時に表示するデータ
    title='市場規模別業界ツリーマップ（カテゴリ別色分け、統合版）',
    labels={"市場規模": "市場規模（億円）"}
)

# カラーバーを削除して、カテゴリごとに色を区別
fig.update_traces(marker=dict(line=dict(color='#FFFFFF', width=2)))

# Streamlitに表示
st.plotly_chart(fig)
